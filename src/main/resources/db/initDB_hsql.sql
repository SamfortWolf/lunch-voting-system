drop table restaurants if exists;
drop table menus if exists;
drop table dishes if exists;
drop table votes if exists;
drop table user_roles if exists;
drop table users if exists;
drop sequence global_seq if exists;

create sequence global_seq as integer start with 100000;

create table users
(
    id                  integer generated by default as sequence global_seq primary key,
    name                varchar(255) not null,
    email               varchar(255) not null,
    password            varchar(255) not null,
    registered          timestamp default now() not null,
    enabled             boolean default true
);
create unique index users_unique_email_idx on users (email);

create table user_roles
(
    user_id             integer not null,
    role                varchar(255),
    constraint user_roles_idx unique (user_id, role),
    foreign key (user_id) references users (id) on delete cascade
);

create table restaurants
(
    id                  integer generated by default as sequence global_seq primary key,
    name                varchar(255) not null,
    address             varchar(255) not null,
    constraint restaurants_idx unique (name, address)
);

create table menus
(
    id                  integer generated by default as sequence global_seq primary key ,
    name                varchar(255) not null,
    restaurant_id       integer not null,
    date                timestamp not null,
    constraint menus_idx unique (restaurant_id, date),
    foreign key (restaurant_id) references restaurants (id) on delete cascade
);

create table dishes
(
    id                  integer generated by default as sequence global_seq primary key,
    name                varchar(255) not null,
    price               integer not null,
    menu_id             integer,
    constraint dishes_idx unique (menu_id, name),
    foreign key (menu_id) references menus (id) on delete cascade
);

create table votes
(
    id                  integer generated by default as sequence global_seq primary key,
    date                timestamp not null,
    user_id             integer not null,
    restaurant_id       integer not null,
    constraint votes_idx unique (user_id, date),
    foreign key (restaurant_id) references restaurants (id) on delete cascade,
    foreign key (user_id) references users (id) on delete cascade
);